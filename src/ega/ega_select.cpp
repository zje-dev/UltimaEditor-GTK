#include <initializer_list>
#include <vector>

#include <iostream>

void ega_to_hex (std::vector<unsigned char> *buf, std::vector<unsigned char> bin_buf, int pos, int *ndx, int *ition) {
	int l(buf->size() - 1), index(*ndx);
	int blu[4];
	blu[0] = (int)((bin_buf[index] & 0xF0) >> 4);
	blu[1] = (int)(bin_buf[index] & 0x0F);
	blu[2] = (int)((bin_buf[index + 1] & 0xF0) >> 4);
	blu[3] = (int)(bin_buf[index + 1] & 0x0F);
	int gre[4];
	gre[0] = (int)((bin_buf[index + 2] & 0xF0) >> 4);
	gre[1] = (int)(bin_buf[index + 2] & 0x0F);
	gre[2] = (int)((bin_buf[index + 3] & 0xF0) >> 4);
	gre[3] = (int)(bin_buf[index + 3] & 0x0F);
	int red[4];
	red[0] = (int)((bin_buf[index + 4] & 0xF0) >> 4);
	red[1] = (int)(bin_buf[index + 4] & 0x0F);
	red[2] = (int)((bin_buf[index + 5] & 0xF0) >> 4);
	red[3] = (int)(bin_buf[index + 5] & 0x0F);
	int i[4];
	i[0] = (int)((bin_buf[index + 6] & 0xF0) >> 4);
	i[1] = (int)(bin_buf[index + 6] & 0x0F);
	i[2] = (int)((bin_buf[index + 7] & 0xF0) >> 4);
	i[3] = (int)(bin_buf[index + 7] & 0x0F);
	int r[12];
	r[0] = 0;
	r[1] = 0;
	r[2] = 0;
	r[3] = 0;
	r[4] = 0;
	r[5] = 0;
	r[6] = 0;
	r[7] = 0;
	r[8] = 0;
	r[9] = 0;
	r[10] =0;
	r[11] =0;
	int bc(0), gc(0), rc(0);
	for (int p = 0; p < 4; p++) {
		//blue
		switch (red[p]) {
			case 1: //000F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 0; r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 115;  r[10]+= 0;r[11]+= 0;
				break;
			case 2: //00F0
				r[0] += 0 ; r[1] += 0;r[2] += 0;
				r[3] += 0 ; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 0 ; r[10]+= 0;r[11]+= 0;
				break;
			case 3: //00FF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] +=  0; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 0;r[11]+= 0;
				break;
			case 4: //0F00
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 5: //0F0F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 0;r[11]+= 0;
				break;
			case 6: //0FF0
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 7: //0FFF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 0;r[11]+= 0;
				break;
			case 8: //F000
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] +=  0; r[4] += 0;r[5] += 0;
				r[6] +=  0; r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 9: //F00F
				r[0] += 115;  r[1] += 0;r[2] += 0;
				r[3] +=   0; r[4] += 0;r[5] += 0;
				r[6] +=  0;  r[7] += 0;r[8] += 0;
				r[9] += 115;  r[10]+= 0;r[11]+= 0;
				break;
			case 10://F0F0
				r[0] += 115; r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 11://F0FF
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] +=115;  r[10]+= 0;r[11]+= 0;
				break; 
			case 12://FF00
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] +=115;  r[4] += 0;r[5] += 0;
				r[6] +=  0; r[7] += 0;r[8] += 0;
				r[9] +=  0; r[10]+= 0;r[11]+= 0;
				break;
			case 13://FF0F
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] +=115;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] +=115;  r[10]+= 0;r[11]+= 0;
				break;
			case 14://FFF0
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] +=115;  r[4] += 0;r[5] += 0;
				r[6] +=115;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 15://FFFF
				r[0] += 115; r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 0;r[11]+= 0;
				break;
			default:
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
		}
		//green
		switch (gre[p]) {
			case 1: //000F
				r[0] += 0; r[1] += 0; r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0; r[7] += 	0;r[8] += 0;
				r[9] += 0;  r[10]+=115;r[11]+= 0;
				break;
			case 2: //00F0
				r[0] += 0;r[1] +=   0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;r[7] +=  115;r[8] += 0;
				r[9] += 0;r[10]+=   0;r[11]+= 0;
				break;
			case 3: //00FF
				r[0] += 0; r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] +=  0;r[5] += 0;
				r[6] += 0;r[7] += 115;r[8] += 0;
				r[9] += 0;r[10]+= 115;r[11]+= 0;
				break;
			case 4: //0F00
				r[0] += 0; r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] += 115;r[5] += 0;
				r[6] += 0; r[7] += 0;r[8] += 0;
				r[9] += 0; r[10]+= 0;r[11]+= 0;
				break;
			case 5: //0F0F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] += 115 ;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;r[10]+= 115 ;r[11]+= 0;
				break;
			case 6: //0FF0
				r[0] += 0;r[1] += 0;   r[2] += 0;
				r[3] += 0;  r[4] += 115;r[5] += 0;
				r[6] += 0;  r[7] += 115;r[8] += 0;
				r[9] += 0;r[10]+= 0;   r[11]+= 0;
				break;
			case 7: //0FFF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 115;r[5] += 0;
				r[6] += 0; r[7] += 115;r[8] += 0;
				r[9] += 0; r[10]+= 115;r[11]+= 0;
				break;
			case 8: //F000
				r[0] += 0;  r[1] +=115;r[2] += 0;
				r[3] += 0;r[4] +=   0;r[5] += 0;
				r[6] += 0;r[7] +=  0 ;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 9: //F00F
				r[0] += 0;  r[1] += 115;r[2] += 0;
				r[3] += 0;r[4] +=    0;r[5] += 0;
				r[6] += 0;  r[7] +=  0;r[8] += 0;
				r[9] += 0;  r[10]+= 115;r[11]+= 0;
				break;
			case 10://F0F0
				r[0] += 0;r[1] +=   115;r[2] += 0;
				r[3] += 0;  r[4] +=  0;r[5] += 0;
				r[6] += 0;r[7] +=   115;r[8] += 0;
				r[9] += 0;  r[10]+=  0;r[11]+= 0;
				break;
			case 11://F0FF
				r[0] += 0;  r[1] += 115; r[2] +=0;
				r[3] += 0;  r[4] += 0; r[5] += 0;
				r[6] += 0;r[7] +=   115;r[8] += 0;
				r[9] += 0;  r[10]+= 115; r[11]+=0;
				break; 
			case 12://FF00
				r[0] += 0;  r[1] +=115;r[2] += 0;
				r[3] += 0;  r[4] +=115;r[5] += 0;
				r[6] += 0;r[7] +=   0;r[8] += 0;
				r[9] += 0;r[10]+=   0;r[11]+= 0;
				break;
			case 13://FF0F
				r[0] += 0;  r[1] +=115;r[2] += 0;
				r[3] += 0;  r[4] +=115;r[5] += 0;
				r[6] += 0;  r[7] +=  0;r[8] +=0;
				r[9] += 0;  r[10]+=115;r[11]+= 0;
				break;
			case 14://FFF0
				r[0] += 0;  r[1] +=115;r[2] += 0;
				r[3] += 0;  r[4] +=115;r[5] += 0;
				r[6] += 0;  r[7] +=115;r[8] += 0;
				r[9] += 0;r[10] +=  0;r[11]+= 0;
				break;
			case 15://FFFF
				r[0] += 0;r[1] += 115;r[2] += 0;
				r[3] += 0;r[4] += 115;r[5] += 0;
				r[6] += 0;r[7] += 115;r[8] += 0;
				r[9] += 0;r[10]+= 115;r[11]+= 0;
				break;
			default:
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
		}
		//red
		switch (blu[p]) {
			case 1: //000F
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0; r[5] +=0;
				r[6] += 0;r[7] += 0;r[8] +=  0;
				r[9] += 0; r[10]+= 0;r[11]+=115;
				break;
			case 2: //00F0
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0;r[5] += 0;
				r[6] += 0;r[7] += 0;r[8] += 115;
				r[9] += 0;r[10]+= 0;r[11]+=  0;
				break;
			case 3: //00FF
				r[0] += 0; r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] += 0; r[5] += 0;
				r[6] += 0;r[7] += 0;r[8] += 115;
				r[9] += 0;r[10]+= 0;r[11]+= 115;
				break;
			case 4: //0F00
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 0;r[5] += 115;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 5: //0F0F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 0;r[5] += 115;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0; r[10]+= 0;r[11]+= 115;
				break;
			case 6: //0FF0
				r[0] += 0; r[1] += 0;r[2] +=  0;
				r[3] += 0;  r[4] += 0;r[5] +=115;
				r[6] += 0;  r[7] += 0;r[8] +=115;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 7: //0FFF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 0;r[5] += 115;
				r[6] += 0; r[7] += 0;r[8] += 115;
				r[9] += 0; r[10]+= 0;r[11]+= 115;
				break;
			case 8: //F000
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 9: //F00F
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+=115;
				break;
			case 10://F0F0
				r[0] += 0; r[1] += 0;r[2] += 115;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0; r[7] += 0;r[8] += 115;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 11://F0FF
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0; r[7] += 0;r[8] += 115;
				r[9] += 0;  r[10]+= 0;r[11]+=115;
				break; 
			case 12://FF00
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] +=115;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 13://FF0F
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] +=115;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0;  r[10]+= 0;r[11]+=115;
				break;
			case 14://FFF0
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] +=115;
				r[6] += 0;  r[7] += 0;r[8] +=115;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 15://FFFF
				r[0] += 0; r[1] += 0;r[2] += 115;
				r[3] += 0; r[4] += 0;r[5] += 115;
				r[6] += 0; r[7] += 0;r[8] += 115;
				r[9] += 0; r[10]+= 0;r[11]+= 115;
				break;
			default:
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
		}
		switch (i[p]) {
			case 1: //000F
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0; r[5] +=0;
				r[6] += 0;r[7] += 0;r[8] +=  0;
				r[9] += 115; r[10]+= 115;r[11]+=115;
				break;
			case 2: //00F0
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0;r[5] += 0;
				r[6] += 115;r[7] += 115;r[8] += 115;
				r[9] += 0;r[10]+= 0;r[11]+=  0;
				break;
			case 3: //00FF
				r[0] += 0; r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] += 0; r[5] += 0;
				r[6] += 115;r[7] += 115;r[8] += 115;
				r[9] += 115;r[10]+= 115;r[11]+= 115;
				break;
			case 4: //0F00
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 115;r[5] += 115;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 5: //0F0F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 115;r[5] += 115;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 115;r[11]+= 115;
				break;
			case 6: //0FF0
				r[0] += 0; r[1] += 0;r[2] +=  0;
				r[3] += 115;  r[4] += 115;r[5] +=115;
				r[6] += 115;  r[7] += 115;r[8] +=115;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 7: //0FFF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115;r[4] += 115;r[5] += 115;
				r[6] += 115;r[7] += 115;r[8] += 115;
				r[9] += 115;r[10]+= 115;r[11]+= 115;
				break;
			case 8: //F000
				r[0] += 115;r[1] += 115;r[2] +=115;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 9: //F00F
				r[0] += 115; r[1] += 115;r[2] +=115;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 115;r[11]+=115;
				break;
			case 10://F0F0
				r[0] += 115; r[1] += 115;r[2] += 115;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 115;r[8] += 115;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 11://F0FF
				r[0] += 115;  r[1] += 115;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 115;r[8] += 115;
				r[9] += 115;  r[10]+= 115;r[11]+=115;
				break; 
			case 12://FF00
				r[0] += 115;  r[1] += 115;r[2] +=115;
				r[3] += 115;  r[4] += 115;r[5] +=115;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 13://FF0F
				r[0] += 115;  r[1] += 115;r[2] +=115;
				r[3] += 115;  r[4] += 115;r[5] +=115;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 115;  r[10]+= 115;r[11]+=115;
				break;
			case 14://FFF0
				r[0] += 115;  r[1] += 115;r[2] +=115;
				r[3] += 115;  r[4] += 115;r[5] +=115;
				r[6] += 115;  r[7] += 115;r[8] +=115;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 15://FFFF
				r[0] += 115; r[1] += 115;r[2] += 115;
				r[3] += 115; r[4] += 115;r[5] += 115;
				r[6] += 115; r[7] += 115;r[8] += 115;
				r[9] += 115; r[10]+= 115;r[11]+= 115;
				break;
			default:
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
		}
		buf->at(l - 11 - *ition) = r[11];
		buf->at(l - 10 - *ition) = r[10];
		buf->at(l - 9 - *ition) =  r[9];
		buf->at(l - 8 - *ition) =  r[8];
		buf->at(l - 7 - *ition) =  r[7];
		buf->at(l - 6 - *ition) =  r[6];
		buf->at(l - 5 - *ition) =  r[5];
		buf->at(l - 4 - *ition) =  r[4];
		buf->at(l - 3 - *ition) =  r[3];
		buf->at(l - 2 - *ition) =  r[2];
		buf->at(l - 1 - *ition) =  r[1];
		buf->at(l - 0 - *ition) =  r[0];
		r[0] = 0;
		r[1] = 0;
		r[2] = 0;
		r[3] = 0;
		r[4] = 0;
		r[5] = 0;
		r[6] = 0;
		r[7] = 0;
		r[8] = 0;
		r[9] = 0;
		r[10] = 0;
		r[11] = 0;
		*ition += 12;
	}
	*ndx += 8;
}

void ega_to_town (std::vector<unsigned char> *buf, std::vector<unsigned char> bin_buf, int pos, int *ndx, int *ition) {
	int l(buf->size() - 1), index(*ndx);
	int blu[2];
	blu[0] = (int)((bin_buf[index] & 0xF0) >> 4);
	blu[1] = (int)(bin_buf[index] & 0x0F);
	int gre[2];
	gre[0] = (int)((bin_buf[index + 1] & 0xF0) >> 4);
	gre[1] = (int)(bin_buf[index + 1] & 0x0F);
	int red[2];
	red[0] = (int)((bin_buf[index + 2] & 0xF0) >> 4);
	red[1] = (int)(bin_buf[index + 2] & 0x0F);
	int i[2];
	i[0] = (int)((bin_buf[index + 3] & 0xF0) >> 4);
	i[1] = (int)(bin_buf[index + 3] & 0x0F);
	int r[12];
	r[0] = 0;
	r[1] = 0;
	r[2] = 0;
	r[3] = 0;
	r[4] = 0;
	r[5] = 0;
	r[6] = 0;
	r[7] = 0;
	r[8] = 0;
	r[9] = 0;
	r[10] =0;
	r[11] =0;
	int bc(0), gc(0), rc(0);
	for (int p = 0; p < 2; p++) {
		//blue
		switch (red[p]) {
			case 1: //000F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 0; r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 115;  r[10]+= 0;r[11]+= 0;
				break;
			case 2: //00F0
				r[0] += 0 ; r[1] += 0;r[2] += 0;
				r[3] += 0 ; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 0 ; r[10]+= 0;r[11]+= 0;
				break;
			case 3: //00FF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] +=  0; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 0;r[11]+= 0;
				break;
			case 4: //0F00
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 5: //0F0F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 0;r[11]+= 0;
				break;
			case 6: //0FF0
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 7: //0FFF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 0;r[11]+= 0;
				break;
			case 8: //F000
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] +=  0; r[4] += 0;r[5] += 0;
				r[6] +=  0; r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 9: //F00F
				r[0] += 115;  r[1] += 0;r[2] += 0;
				r[3] +=   0; r[4] += 0;r[5] += 0;
				r[6] +=  0;  r[7] += 0;r[8] += 0;
				r[9] += 115;  r[10]+= 0;r[11]+= 0;
				break;
			case 10://F0F0
				r[0] += 115; r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 11://F0FF
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] +=115;  r[10]+= 0;r[11]+= 0;
				break; 
			case 12://FF00
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] +=115;  r[4] += 0;r[5] += 0;
				r[6] +=  0; r[7] += 0;r[8] += 0;
				r[9] +=  0; r[10]+= 0;r[11]+= 0;
				break;
			case 13://FF0F
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] +=115;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] +=115;  r[10]+= 0;r[11]+= 0;
				break;
			case 14://FFF0
				r[0] +=115;  r[1] += 0;r[2] += 0;
				r[3] +=115;  r[4] += 0;r[5] += 0;
				r[6] +=115;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 15://FFFF
				r[0] += 115; r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 0;r[11]+= 0;
				break;
			default:
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
		}
		//green
		switch (gre[p]) {
			case 1: //000F
				r[0] += 0; r[1] += 0; r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0; r[7] += 	0;r[8] += 0;
				r[9] += 0;  r[10]+=115;r[11]+= 0;
				break;
			case 2: //00F0
				r[0] += 0;r[1] +=   0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;r[7] +=  115;r[8] += 0;
				r[9] += 0;r[10]+=   0;r[11]+= 0;
				break;
			case 3: //00FF
				r[0] += 0; r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] +=  0;r[5] += 0;
				r[6] += 0;r[7] += 115;r[8] += 0;
				r[9] += 0;r[10]+= 115;r[11]+= 0;
				break;
			case 4: //0F00
				r[0] += 0; r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] += 115;r[5] += 0;
				r[6] += 0; r[7] += 0;r[8] += 0;
				r[9] += 0; r[10]+= 0;r[11]+= 0;
				break;
			case 5: //0F0F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] += 115 ;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;r[10]+= 115 ;r[11]+= 0;
				break;
			case 6: //0FF0
				r[0] += 0;r[1] += 0;   r[2] += 0;
				r[3] += 0;  r[4] += 115;r[5] += 0;
				r[6] += 0;  r[7] += 115;r[8] += 0;
				r[9] += 0;r[10]+= 0;   r[11]+= 0;
				break;
			case 7: //0FFF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 115;r[5] += 0;
				r[6] += 0; r[7] += 115;r[8] += 0;
				r[9] += 0; r[10]+= 115;r[11]+= 0;
				break;
			case 8: //F000
				r[0] += 0;  r[1] +=115;r[2] += 0;
				r[3] += 0;r[4] +=   0;r[5] += 0;
				r[6] += 0;r[7] +=  0 ;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 9: //F00F
				r[0] += 0;  r[1] += 115;r[2] += 0;
				r[3] += 0;r[4] +=    0;r[5] += 0;
				r[6] += 0;  r[7] +=  0;r[8] += 0;
				r[9] += 0;  r[10]+= 115;r[11]+= 0;
				break;
			case 10://F0F0
				r[0] += 0;r[1] +=   115;r[2] += 0;
				r[3] += 0;  r[4] +=  0;r[5] += 0;
				r[6] += 0;r[7] +=   115;r[8] += 0;
				r[9] += 0;  r[10]+=  0;r[11]+= 0;
				break;
			case 11://F0FF
				r[0] += 0;  r[1] += 115; r[2] +=0;
				r[3] += 0;  r[4] += 0; r[5] += 0;
				r[6] += 0;r[7] +=   115;r[8] += 0;
				r[9] += 0;  r[10]+= 115; r[11]+=0;
				break; 
			case 12://FF00
				r[0] += 0;  r[1] +=115;r[2] += 0;
				r[3] += 0;  r[4] +=115;r[5] += 0;
				r[6] += 0;r[7] +=   0;r[8] += 0;
				r[9] += 0;r[10]+=   0;r[11]+= 0;
				break;
			case 13://FF0F
				r[0] += 0;  r[1] +=115;r[2] += 0;
				r[3] += 0;  r[4] +=115;r[5] += 0;
				r[6] += 0;  r[7] +=  0;r[8] +=0;
				r[9] += 0;  r[10]+=115;r[11]+= 0;
				break;
			case 14://FFF0
				r[0] += 0;  r[1] +=115;r[2] += 0;
				r[3] += 0;  r[4] +=115;r[5] += 0;
				r[6] += 0;  r[7] +=115;r[8] += 0;
				r[9] += 0;r[10] +=  0;r[11]+= 0;
				break;
			case 15://FFFF
				r[0] += 0;r[1] += 115;r[2] += 0;
				r[3] += 0;r[4] += 115;r[5] += 0;
				r[6] += 0;r[7] += 115;r[8] += 0;
				r[9] += 0;r[10]+= 115;r[11]+= 0;
				break;
			default:
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
		}
		//red
		switch (blu[p]) {
			case 1: //000F
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0; r[5] +=0;
				r[6] += 0;r[7] += 0;r[8] +=  0;
				r[9] += 0; r[10]+= 0;r[11]+=115;
				break;
			case 2: //00F0
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0;r[5] += 0;
				r[6] += 0;r[7] += 0;r[8] += 115;
				r[9] += 0;r[10]+= 0;r[11]+=  0;
				break;
			case 3: //00FF
				r[0] += 0; r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] += 0; r[5] += 0;
				r[6] += 0;r[7] += 0;r[8] += 115;
				r[9] += 0;r[10]+= 0;r[11]+= 115;
				break;
			case 4: //0F00
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 0;r[5] += 115;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 5: //0F0F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 0;r[5] += 115;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0; r[10]+= 0;r[11]+= 115;
				break;
			case 6: //0FF0
				r[0] += 0; r[1] += 0;r[2] +=  0;
				r[3] += 0;  r[4] += 0;r[5] +=115;
				r[6] += 0;  r[7] += 0;r[8] +=115;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 7: //0FFF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0; r[4] += 0;r[5] += 115;
				r[6] += 0; r[7] += 0;r[8] += 115;
				r[9] += 0; r[10]+= 0;r[11]+= 115;
				break;
			case 8: //F000
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 9: //F00F
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+=115;
				break;
			case 10://F0F0
				r[0] += 0; r[1] += 0;r[2] += 115;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0; r[7] += 0;r[8] += 115;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 11://F0FF
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0; r[7] += 0;r[8] += 115;
				r[9] += 0;  r[10]+= 0;r[11]+=115;
				break; 
			case 12://FF00
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] +=115;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 13://FF0F
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] +=115;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0;  r[10]+= 0;r[11]+=115;
				break;
			case 14://FFF0
				r[0] += 0;  r[1] += 0;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] +=115;
				r[6] += 0;  r[7] += 0;r[8] +=115;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 15://FFFF
				r[0] += 0; r[1] += 0;r[2] += 115;
				r[3] += 0; r[4] += 0;r[5] += 115;
				r[6] += 0; r[7] += 0;r[8] += 115;
				r[9] += 0; r[10]+= 0;r[11]+= 115;
				break;
			default:
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
		}
		switch (i[p]) {
			case 1: //000F
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0; r[5] +=0;
				r[6] += 0;r[7] += 0;r[8] +=  0;
				r[9] += 115; r[10]+= 115;r[11]+=115;
				break;
			case 2: //00F0
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0;r[5] += 0;
				r[6] += 115;r[7] += 115;r[8] += 115;
				r[9] += 0;r[10]+= 0;r[11]+=  0;
				break;
			case 3: //00FF
				r[0] += 0; r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] += 0; r[5] += 0;
				r[6] += 115;r[7] += 115;r[8] += 115;
				r[9] += 115;r[10]+= 115;r[11]+= 115;
				break;
			case 4: //0F00
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 115;r[5] += 115;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 5: //0F0F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115; r[4] += 115;r[5] += 115;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 115;r[11]+= 115;
				break;
			case 6: //0FF0
				r[0] += 0; r[1] += 0;r[2] +=  0;
				r[3] += 115;  r[4] += 115;r[5] +=115;
				r[6] += 115;  r[7] += 115;r[8] +=115;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 7: //0FFF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 115;r[4] += 115;r[5] += 115;
				r[6] += 115;r[7] += 115;r[8] += 115;
				r[9] += 115;r[10]+= 115;r[11]+= 115;
				break;
			case 8: //F000
				r[0] += 115;r[1] += 115;r[2] +=115;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 9: //F00F
				r[0] += 115; r[1] += 115;r[2] +=115;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 115; r[10]+= 115;r[11]+=115;
				break;
			case 10://F0F0
				r[0] += 115; r[1] += 115;r[2] += 115;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 115;r[8] += 115;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 11://F0FF
				r[0] += 115;  r[1] += 115;r[2] +=115;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 115; r[7] += 115;r[8] += 115;
				r[9] += 115;  r[10]+= 115;r[11]+=115;
				break; 
			case 12://FF00
				r[0] += 115;  r[1] += 115;r[2] +=115;
				r[3] += 115;  r[4] += 115;r[5] +=115;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 13://FF0F
				r[0] += 115;  r[1] += 115;r[2] +=115;
				r[3] += 115;  r[4] += 115;r[5] +=115;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 115;  r[10]+= 115;r[11]+=115;
				break;
			case 14://FFF0
				r[0] += 115;  r[1] += 115;r[2] +=115;
				r[3] += 115;  r[4] += 115;r[5] +=115;
				r[6] += 115;  r[7] += 115;r[8] +=115;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 15://FFFF
				r[0] += 115; r[1] += 115;r[2] += 115;
				r[3] += 115; r[4] += 115;r[5] += 115;
				r[6] += 115; r[7] += 115;r[8] += 115;
				r[9] += 115; r[10]+= 115;r[11]+= 115;
				break;
			default:
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
		}
		buf->at(l - 11 - *ition) = r[11];
		buf->at(l - 10 - *ition) = r[10];
		buf->at(l - 9 - *ition) =  r[9];
		buf->at(l - 8 - *ition) =  r[8];
		buf->at(l - 7 - *ition) =  r[7];
		buf->at(l - 6 - *ition) =  r[6];
		buf->at(l - 5 - *ition) =  r[5];
		buf->at(l - 4 - *ition) =  r[4];
		buf->at(l - 3 - *ition) =  r[3];
		buf->at(l - 2 - *ition) =  r[2];
		buf->at(l - 1 - *ition) =  r[1];
		buf->at(l - 0 - *ition) =  r[0];
		r[0] = 0;
		r[1] = 0;
		r[2] = 0;
		r[3] = 0;
		r[4] = 0;
		r[5] = 0;
		r[6] = 0;
		r[7] = 0;
		r[8] = 0;
		r[9] = 0;
		r[10] = 0;
		r[11] = 0;
		*ition += 12;
	}
	*ndx += 4;
}

void ega_to_space (std::vector<unsigned char> *buf, std::vector<unsigned char> bin_buf, int pos, int *ndx, int *ition) {
	int l(buf->size() - 1), index(*ndx);
	int i[16];
	i[0] = (int)((bin_buf[index + 0] & 0xF0) >> 4);
	i[1] = (int)(bin_buf[index + 0] & 0x0F);
	i[2] = (int)((bin_buf[index + 1] & 0xF0) >> 4);
	i[3] = (int)(bin_buf[index + 1] & 0x0F);
	i[4] = (int)((bin_buf[index + 2] & 0xF0) >> 4);
	i[5] = (int)(bin_buf[index + 2] & 0x0F);
	i[6] = (int)((bin_buf[index + 3] & 0xF0) >> 4);
	i[7] = (int)(bin_buf[index + 3] & 0x0F);
	i[8] = (int)((bin_buf[index + 4] & 0xF0) >> 4);
	i[9] = (int)(bin_buf[index + 4] & 0x0F);
	i[10]= (int)((bin_buf[index + 5] & 0xF0) >> 4);
	i[11]= (int)(bin_buf[index + 5] & 0x0F);
	i[12] = (int)((bin_buf[index + 6] & 0xF0) >> 4);
	i[13] = (int)(bin_buf[index + 6] & 0x0F);
	i[14] = (int)((bin_buf[index + 7] & 0xF0) >> 4);
	i[15] = (int)(bin_buf[index + 7] & 0x0F);
	int r[12];
	r[0] = 0;
	r[1] = 0;
	r[2] = 0;
	r[3] = 0;
	r[4] = 0;
	r[5] = 0;
	r[6] = 0;
	r[7] = 0;
	r[8] = 0;
	r[9] = 0;
	r[10] =0;
	r[11] =0;
	int bc(0), gc(0), rc(0);
	for (int p = 0; p < 16; p++) {
		switch (i[p]) {
			case 1: //000F
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0; r[5] +=0;
				r[6] += 0;r[7] += 0;r[8] +=  0;
				r[9] += 135; r[10]+= 135;r[11]+=135;
				break;
			case 2: //00F0
				r[0] += 0;r[1] += 0;r[2] +=  0;
				r[3] += 0; r[4] += 0;r[5] += 0;
				r[6] += 135;r[7] += 135;r[8] += 135;
				r[9] += 0;r[10]+= 0;r[11]+=  0;
				break;
			case 3: //00FF
				r[0] += 0; r[1] += 0;r[2] += 0;
				r[3] += 0;r[4] += 0; r[5] += 0;
				r[6] += 135;r[7] += 135;r[8] += 135;
				r[9] += 135;r[10]+= 135;r[11]+= 135;
				break;
			case 4: //0F00
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 135; r[4] += 135;r[5] += 135;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 5: //0F0F
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 135; r[4] += 135;r[5] += 135;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 135; r[10]+= 135;r[11]+= 135;
				break;
			case 6: //0FF0
				r[0] += 0; r[1] += 0;r[2] +=  0;
				r[3] += 135;  r[4] += 135;r[5] +=135;
				r[6] += 135;  r[7] += 135;r[8] +=135;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 7: //0FFF
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 135;r[4] += 135;r[5] += 135;
				r[6] += 135;r[7] += 135;r[8] += 135;
				r[9] += 135;r[10]+= 135;r[11]+= 135;
				break;
			case 8: //F000
				r[0] += 135;r[1] += 135;r[2] +=135;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 9: //F00F
				r[0] += 135; r[1] += 135;r[2] +=135;
				r[3] += 0; r[4] += 0;r[5] +=  0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 135; r[10]+= 135;r[11]+=135;
				break;
			case 10://F0F0
				r[0] += 135; r[1] += 135;r[2] += 135;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 135; r[7] += 135;r[8] += 135;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
			case 11://F0FF
				r[0] += 135;  r[1] += 135;r[2] +=135;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 135; r[7] += 135;r[8] += 135;
				r[9] += 135;  r[10]+= 135;r[11]+=135;
				break; 
			case 12://FF00
				r[0] += 135;  r[1] += 135;r[2] +=135;
				r[3] += 135;  r[4] += 135;r[5] +=135;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 13://FF0F
				r[0] += 135;  r[1] += 135;r[2] +=135;
				r[3] += 135;  r[4] += 135;r[5] +=135;
				r[6] += 0; r[7] += 0;r[8] +=  0;
				r[9] += 135;  r[10]+= 135;r[11]+=135;
				break;
			case 14://FFF0
				r[0] += 135;  r[1] += 135;r[2] +=135;
				r[3] += 135;  r[4] += 135;r[5] +=135;
				r[6] += 135;  r[7] += 135;r[8] +=135;
				r[9] += 0; r[10]+= 0;r[11]+=  0;
				break;
			case 15://FFFF
				r[0] += 135; r[1] += 135;r[2] += 135;
				r[3] += 135; r[4] += 135;r[5] += 135;
				r[6] += 135; r[7] += 135;r[8] += 135;
				r[9] += 135; r[10]+= 135;r[11]+= 135;
				break;
			default:
				r[0] += 0;  r[1] += 0;r[2] += 0;
				r[3] += 0;  r[4] += 0;r[5] += 0;
				r[6] += 0;  r[7] += 0;r[8] += 0;
				r[9] += 0;  r[10]+= 0;r[11]+= 0;
				break;
		}
		buf->at(l - 11 - *ition) = r[11];
		buf->at(l - 10 - *ition) = r[10];
		buf->at(l - 9 - *ition) =  r[9];
		buf->at(l - 8 - *ition) =  r[8];
		buf->at(l - 7 - *ition) =  r[7];
		buf->at(l - 6 - *ition) =  r[6];
		buf->at(l - 5 - *ition) =  r[5];
		buf->at(l - 4 - *ition) =  r[4];
		buf->at(l - 3 - *ition) =  r[3];
		buf->at(l - 2 - *ition) =  r[2];
		buf->at(l - 1 - *ition) =  r[1];
		buf->at(l - 0 - *ition) =  r[0];
		r[0] = 0;
		r[1] = 0;
		r[2] = 0;
		r[3] = 0;
		r[4] = 0;
		r[5] = 0;
		r[6] = 0;
		r[7] = 0;
		r[8] = 0;
		r[9] = 0;
		r[10] = 0;
		r[11] = 0;
		*ition += 12;
	}
	*ndx += 8;
}

void map_ega_xpm (std::vector<unsigned char> *bmp, int i, int *pixel) {
	int l = bmp->size() - 1;
	switch (i) {
		case 0:
			bmp->at(l - 0 - *pixel) = 0;
			bmp->at(l - 1 - *pixel) = 0;
			bmp->at(l - 2 - *pixel) = 0;
			break;
		case 1:
			bmp->at(l - 0 - *pixel) = 85;
			bmp->at(l - 1 - *pixel) = 85;
			bmp->at(l - 2 - *pixel) = 85;
			break;
		case 2:
			bmp->at(l - 0 - *pixel) = 170;
			bmp->at(l - 1 - *pixel) = 170;
			bmp->at(l - 2 - *pixel) = 170;
			break;
		case 3:
			bmp->at(l - 0 - *pixel) = 255;
			bmp->at(l - 1 - *pixel) = 255;
			bmp->at(l - 2 - *pixel) = 255;
			break;
		case 4:
			bmp->at(l - 0 - *pixel) = 255;
			bmp->at(l - 1 - *pixel) = 255;
			bmp->at(l - 2 - *pixel) = 255;
			break;
		case 5:
			bmp->at(l - 0 - *pixel) = 70;
			bmp->at(l - 1 - *pixel) = 171;
			bmp->at(l - 2 - *pixel) = 21;
			break;
		case 6:
			bmp->at(l - 0 - *pixel) = 92;
			bmp->at(l - 1 - *pixel) = 226;
			bmp->at(l - 2 - *pixel) = 84;
			break;
		case 7:
			bmp->at(l - 0 - *pixel) = 170;
			bmp->at(l - 1 - *pixel) = 85;
			bmp->at(l - 2 - *pixel) = 21;
			break;
		case 8:
			bmp->at(l - 0 - *pixel) = 247;
			bmp->at(l - 1 - *pixel) = 83;
			bmp->at(l - 2 - *pixel) = 84;
			break;
		case 9:
			bmp->at(l - 0 - *pixel) = 170;
			bmp->at(l - 1 - *pixel) = 170;
			bmp->at(l - 2 - *pixel) = 170;
			break;
		case 10:
			bmp->at(l - 0 - *pixel) = 242;
			bmp->at(l - 1 - *pixel) = 138;
			bmp->at(l - 2 - *pixel) = 253;
			break;
		case 11:
			bmp->at(l - 0 - *pixel) = 81;
			bmp->at(l - 1 - *pixel) = 247;
			bmp->at(l - 2 - *pixel) = 253;
			break;
		case 12:
			bmp->at(l - 0 - *pixel) = 29;
			bmp->at(l - 1 - *pixel) = 79;
			bmp->at(l - 2 - *pixel) = 171;
			break;
		case 13:
			bmp->at(l - 0 - *pixel) = 93;
			bmp->at(l - 1 - *pixel) = 122;
			bmp->at(l - 2 - *pixel) = 252;
			break;
		case 14:
			bmp->at(l - 0 - *pixel) = 170;
			bmp->at(l - 1 - *pixel) = 170;
			bmp->at(l - 2 - *pixel) = 170;
			break;
		case 15:
			bmp->at(l - 0 - *pixel) = 255;
			bmp->at(l - 1 - *pixel) = 255;
			bmp->at(l - 2 - *pixel) = 255;
			break;
	}
	*pixel += 3;
}
